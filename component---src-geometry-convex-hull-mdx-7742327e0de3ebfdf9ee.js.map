{"version":3,"sources":["webpack:///../src/geometry/convex-hull.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Props","GrahamScan","JarvisMarch","Chan","Canvas","random","points","poly","polygons","isMDXComponent"],"mappings":"ySAYaA,G,UAAe,S,8MAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,UAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,YADR,YAGA,6BACA,kBACE,GAAM,cADR,cAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,2JAA4JC,SAAO,GACpMJ,QACAH,kBACAQ,eACAC,UACAC,wBACAC,0BACAC,YACAC,WACAC,YAToM,gBAUpMd,IAVoM,EAWpMH,eAXoM,GAYnMO,QAAQ,eACZ,WACK,IAAMW,EAASD,YAAO,GAAI,IAAK,IAAK,IAAK,GAAI,IACvCE,EAAON,qBAAWK,GACxB,OAAO,YAAC,IAAD,CAAQA,OAAQA,EAAQE,SAAU,CAACD,GAAOZ,QAAQ,cAG7D,kBACE,GAAM,eADR,eAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,4JAA6JC,SAAO,GACrMJ,QACAH,kBACAQ,eACAC,UACAC,wBACAC,0BACAC,YACAC,WACAC,YATqM,gBAUrMd,IAVqM,EAWrMH,eAXqM,GAYpMO,QAAQ,eACZ,WACK,IAAMW,EAASD,YAAO,GAAI,IAAK,IAAK,IAAK,GAAI,IACvCE,EAAOL,sBAAYI,GACzB,OAAO,YAAC,IAAD,CAAQA,OAAQA,EAAQE,SAAU,CAACD,GAAOZ,QAAQ,cAG7D,kBACE,GAAM,QADR,QAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,qJAAsJC,SAAO,GAC9LJ,QACAH,kBACAQ,eACAC,UACAC,wBACAC,0BACAC,YACAC,WACAC,YAT8L,gBAU9Ld,IAV8L,EAW9LH,eAX8L,GAY7LO,QAAQ,eACZ,WACK,IAAMW,EAASD,YAAO,GAAI,IAAK,IAAK,IAAK,GAAI,IACvCE,EAAOJ,eAAKG,GAClB,OAAO,YAAC,IAAD,CAAQA,OAAQA,EAAQE,SAAU,CAACD,GAAOZ,QAAQ,oB,4MAOjEH,EAAWiB,gBAAiB","file":"component---src-geometry-convex-hull-mdx-7742327e0de3ebfdf9ee.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/didi/Desktop/project/anntopia/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { GrahamScan, JarvisMarch, Chan } from '@anntopia/geometry';\nimport Canvas from '../components/Canvas';\nimport { random } from '../components/util';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`Todo`}</p>\n    <h2 {...{\n      \"id\": \"grahamscan\"\n    }}>{`GrahamScan`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const points = random(40, 100, 350, 250, 50, 50)\\n  const poly = GrahamScan(points)\\n  return <Canvas points={points} polygons={[poly]} />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      GrahamScan,\n      JarvisMarch,\n      Chan,\n      Canvas,\n      random,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const points = random(40, 100, 350, 250, 50, 50);\n        const poly = GrahamScan(points);\n        return <Canvas points={points} polygons={[poly]} mdxType=\"Canvas\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"jarvismarch\"\n    }}>{`JarvisMarch`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const points = random(40, 100, 350, 250, 50, 50)\\n  const poly = JarvisMarch(points)\\n  return <Canvas points={points} polygons={[poly]} />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      GrahamScan,\n      JarvisMarch,\n      Chan,\n      Canvas,\n      random,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const points = random(40, 100, 350, 250, 50, 50);\n        const poly = JarvisMarch(points);\n        return <Canvas points={points} polygons={[poly]} mdxType=\"Canvas\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"chan\"\n    }}>{`Chan`}</h2>\n    <Playground __position={2} __code={'() => {\\n  const points = random(40, 100, 350, 250, 50, 50)\\n  const poly = Chan(points)\\n  return <Canvas points={points} polygons={[poly]} />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      GrahamScan,\n      JarvisMarch,\n      Chan,\n      Canvas,\n      random,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const points = random(40, 100, 350, 250, 50, 50);\n        const poly = Chan(points);\n        return <Canvas points={points} polygons={[poly]} mdxType=\"Canvas\" />;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}