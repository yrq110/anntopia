(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{nspU:function(n,e,t){"use strict";t.r(e),t.d(e,"_frontmatter",(function(){return u})),t.d(e,"default",(function(){return d}));var o=t("IKa1"),r=t("ITlK"),a=(t("r0ML"),t("V0Ug")),i=t("sN0p"),s=t("EeHy"),c=t("NIMi"),m=t("S48i"),p=t("cbvu"),u=(t("xH0s"),{});void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/geometry/bounding-box.mdx"}});var b={_frontmatter:u},x=i.a;function d(n){var e,t,d,y=n.components,f=Object(r.a)(n,["components"]);return Object(a.b)(x,Object(o.a)({},b,f,{components:y,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"overview"},"Overview"),Object(a.b)("p",null,"Todo"),Object(a.b)("h2",{id:"axisalignedboundingbox"},"AxisAlignedBoundingBox"),Object(a.b)(s.c,{__position:0,__code:"() => {\n  // import { AABB } from '@anntopia/geometry'\n  const points = uniform(10)\n  const rect = AABB(points)\n  const [minx, miny, maxx, maxy] = rect\n  const vertices = [\n    minx,\n    miny,\n    maxx,\n    miny,\n    maxx,\n    maxy,\n    minx,\n    maxy,\n    minx,\n    miny,\n  ]\n  return <Canvas points={points} lines={vertices} />\n}",__scope:(e={props:f,DefaultLayout:i.a,Playground:s.c,Props:s.d,AABB:c.a,MinAreaBox:c.r,MinPerimeterBox:c.s,Canvas:m.a,uniform:p.a},e.DefaultLayout=i.a,e._frontmatter=u,e),mdxType:"Playground"},(function(){var n=Object(p.a)(10),e=Object(c.a)(n),t=e[0],o=e[1],r=e[2],i=e[3],s=[t,o,r,o,r,i,t,i,t,o];return Object(a.b)(m.a,{points:n,lines:s,mdxType:"Canvas"})})),Object(a.b)("h2",{id:"minareabox"},"MinAreaBox"),Object(a.b)(s.c,{__position:1,__code:"() => {\n  // import { MinAreaBox } from '@anntopia/geometry'\n  const points = uniform(10, 30, 30)\n  const rect = MinAreaBox(points)\n  const [v0x, v0y] = [rect[0], rect[1]]\n  rect.push(v0x, v0y)\n  return <Canvas points={points} lines={rect} />\n}",__scope:(t={props:f,DefaultLayout:i.a,Playground:s.c,Props:s.d,AABB:c.a,MinAreaBox:c.r,MinPerimeterBox:c.s,Canvas:m.a,uniform:p.a},t.DefaultLayout=i.a,t._frontmatter=u,t),mdxType:"Playground"},(function(){var n=Object(p.a)(10,30,30),e=Object(c.r)(n),t=[e[0],e[1]],o=t[0],r=t[1];return e.push(o,r),Object(a.b)(m.a,{points:n,lines:e,mdxType:"Canvas"})})),Object(a.b)("h2",{id:"minperimeterbox"},"MinPerimeterBox"),Object(a.b)(s.c,{__position:2,__code:"() => {\n  // import { MinPerimeterBox } from '@anntopia/geometry'\n  const points = uniform(10, 30, 30)\n  const rect = MinPerimeterBox(points)\n  const [v0x, v0y] = [rect[0], rect[1]]\n  rect.push(v0x, v0y)\n  return <Canvas points={points} lines={rect} />\n}",__scope:(d={props:f,DefaultLayout:i.a,Playground:s.c,Props:s.d,AABB:c.a,MinAreaBox:c.r,MinPerimeterBox:c.s,Canvas:m.a,uniform:p.a},d.DefaultLayout=i.a,d._frontmatter=u,d),mdxType:"Playground"},(function(){var n=Object(p.a)(10,30,30),e=Object(c.s)(n),t=[e[0],e[1]],o=t[0],r=t[1];return e.push(o,r),Object(a.b)(m.a,{points:n,lines:e,mdxType:"Canvas"})})))}void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/geometry/bounding-box.mdx"}}),d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-geometry-bounding-box-mdx-786150bc11ebe3de1acf.js.map