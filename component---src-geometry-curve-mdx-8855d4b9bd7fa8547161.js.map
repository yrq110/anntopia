{"version":3,"sources":["webpack:///../src/geometry/curve.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","CubicSpline","CubicParameterSpline","BoundaryCondition","createQuasiUniformKnots","createNonUniformKnots","HermiteSpline","CardinalSpline","BezierSpline","BSpline","NURBS","Canvas","uniform","dataPoints","spline","setConfig","boundary","Clamped","points","getInterpolation","lines","NotAKnot","derivatives","tension","closed","setStep","k","knots","insertKnot","isMDXComponent"],"mappings":"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","file":"component---src-geometry-curve-mdx-8855d4b9bd7fa8547161.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/didi/Desktop/project/anntopia/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { CubicSpline, CubicParameterSpline, BoundaryCondition, createQuasiUniformKnots, createNonUniformKnots, HermiteSpline, CardinalSpline, BezierSpline, BSpline, NURBS } from '@anntopia/geometry';\nimport Canvas from '../components/Canvas';\nimport { uniform } from '../utils/randomPoints';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`Contains these main types of interpolating spline:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#cubic-spline\"\n        }}>{`Cubic Spline`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#hermite-spline\"\n        }}>{`Hermite Spline`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#bezier-spline\"\n        }}>{`Bezier Spline`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#b-spline\"\n        }}>{`B Spline`}</a></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"common-props\"\n    }}>{`Common Props`}</h3>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`dataPoints`}</strong>{` - The data points of spline`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"common-methods\"\n    }}>{`Common Methods`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`constructor(dataPoints: number[], config?: Partial<Config`}{`>`}{`, step?: number)`}</li>\n      <li parentName=\"ul\">{`getInterpolation(forceUpdate: boolean = true)`}</li>\n      <li parentName=\"ul\">{`setConfig(config: Object) & getConfig()`}</li>\n      <li parentName=\"ul\">{`setStep(step: number) & getStep()`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { BezierSpline } from '@anntopia/geometry'\nconst dataPoints = [\n  50, 250,\n  200, 150,\n  100, 50,\n  250, 70,\n  400, 50,\n  450, 250,\n]\nconst spline = new BezierSpline(dataPoints, { tension: 0.5 }, 0.01)\nlet points = spline.getInterpolation() // get interpolatin points\n// spline.dataPoints: [50, 250, 200, 150, 100, 50, 250, 70, 400, 50, 450, 250]\n// points: [50, 250, 52.67857360839844, 249.23570251464844, 55.333335876464844, 248.4666748046875, ...]\nspline.setConfig({ tension: 0.7 }) // change config\nspline.setStep(0.001) // change step\npoints = spline.getInterpolation() // get interpolating points with the new config and step\n// points: [50, 250, 50.256561279296875, 249.97325134277344, 50.512908935546875, 249.94638061523438, ...]\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"cubic-spline\"\n    }}>{`Cubic Spline`}</h2>\n    <h3 {...{\n      \"id\": \"config\"\n    }}>{`Config`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boundary`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`0 - natural; 1 - clamped; 2 - not-a-knot`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Boundary type. Default is `}<inlineCode parentName=\"td\">{`0`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`derivatives`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`[number, number]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`First derivatives of x in start and end points. Need to set this if the boundary type is 0(natural). Default is `}<inlineCode parentName=\"td\">{`[0, 0]`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"playground\"\n    }}>{`Playground`}</h3>\n    <Playground __position={0} __code={'() => {\\n  // import { CubicSpline, BoundaryCondition } from \\'@anntopia/geometry\\'\\n  const dataPoints = [50, 250, 100, 50, 200, 150, 250, 70, 380, 100, 450, 250]\\n  const spline = new CubicSpline(dataPoints)\\n  spline.setConfig({\\n    boundary: BoundaryCondition.Clamped, // or 1\\n  })\\n  const points = spline.getInterpolation()\\n  return <Canvas points={dataPoints} lines={[points]} />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CubicSpline,\n      CubicParameterSpline,\n      BoundaryCondition,\n      createQuasiUniformKnots,\n      createNonUniformKnots,\n      HermiteSpline,\n      CardinalSpline,\n      BezierSpline,\n      BSpline,\n      NURBS,\n      Canvas,\n      uniform,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        // import { CubicSpline, BoundaryCondition } from '@anntopia/geometry'\n        const dataPoints = [50, 250, 100, 50, 200, 150, 250, 70, 380, 100, 450, 250];\n        const spline = new CubicSpline(dataPoints);\n        spline.setConfig({\n          boundary: BoundaryCondition.Clamped // or 1\n\n        });\n        const points = spline.getInterpolation();\n        return <Canvas points={dataPoints} lines={[points]} mdxType=\"Canvas\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"cubic-parameter-spline\"\n    }}>{`Cubic Parameter Spline`}</h2>\n    <h3 {...{\n      \"id\": \"config-1\"\n    }}>{`Config`}</h3>\n    <p>{`Same as the Config in `}<a parentName=\"p\" {...{\n        \"href\": \"#cubic-spline\"\n      }}>{`CubicSpline`}</a></p>\n    <h3 {...{\n      \"id\": \"playground-1\"\n    }}>{`Playground`}</h3>\n    <Playground __position={1} __code={'() => {\\n  // import { CubicParameterSpline, BoundaryCondition } from \\'@anntopia/geometry\\'\\n  const dataPoints = [50, 250, 200, 150, 100, 50, 250, 70, 400, 50, 450, 250]\\n  const spline = new CubicParameterSpline(dataPoints)\\n  spline.setConfig({\\n    boundary: BoundaryCondition.NotAKnot,\\n  })\\n  const points = spline.getInterpolation()\\n  return <Canvas points={dataPoints} lines={[points]} />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CubicSpline,\n      CubicParameterSpline,\n      BoundaryCondition,\n      createQuasiUniformKnots,\n      createNonUniformKnots,\n      HermiteSpline,\n      CardinalSpline,\n      BezierSpline,\n      BSpline,\n      NURBS,\n      Canvas,\n      uniform,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        // import { CubicParameterSpline, BoundaryCondition } from '@anntopia/geometry'\n        const dataPoints = [50, 250, 200, 150, 100, 50, 250, 70, 400, 50, 450, 250];\n        const spline = new CubicParameterSpline(dataPoints);\n        spline.setConfig({\n          boundary: BoundaryCondition.NotAKnot\n        });\n        const points = spline.getInterpolation();\n        return <Canvas points={dataPoints} lines={[points]} mdxType=\"Canvas\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"hermite-spline\"\n    }}>{`Hermite Spline`}</h2>\n    <h3 {...{\n      \"id\": \"config-2\"\n    }}>{`Config`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`derivatives`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`First derivatives of x and y in every data points.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"playground-2\"\n    }}>{`Playground`}</h3>\n    <Playground __position={2} __code={'() => {\\n  // import { HermiteSpline } from \\'@anntopia/geometry\\'\\n  const dataPoints = [50, 250, 200, 150, 100, 50, 250, 70, 400, 50, 450, 250]\\n  const derivatives = [100, 50, 0, -100, 200, 10, 0, 100, 100, 20, 0, -100]\\n  const spline = new HermiteSpline(dataPoints)\\n  spline.setConfig({ derivatives })\\n  const points = spline.getInterpolation()\\n  return <Canvas points={dataPoints} lines={[points]} />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CubicSpline,\n      CubicParameterSpline,\n      BoundaryCondition,\n      createQuasiUniformKnots,\n      createNonUniformKnots,\n      HermiteSpline,\n      CardinalSpline,\n      BezierSpline,\n      BSpline,\n      NURBS,\n      Canvas,\n      uniform,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        // import { HermiteSpline } from '@anntopia/geometry'\n        const dataPoints = [50, 250, 200, 150, 100, 50, 250, 70, 400, 50, 450, 250];\n        const derivatives = [100, 50, 0, -100, 200, 10, 0, 100, 100, 20, 0, -100];\n        const spline = new HermiteSpline(dataPoints);\n        spline.setConfig({\n          derivatives\n        });\n        const points = spline.getInterpolation();\n        return <Canvas points={dataPoints} lines={[points]} mdxType=\"Canvas\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"cardinal-spline\"\n    }}>{`Cardinal Spline`}</h2>\n    <h3 {...{\n      \"id\": \"config-3\"\n    }}>{`Config`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`vs`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[number, number]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Virtual start point. Default position has the offset by `}{`[0.01,0.01]`}{` from the first data point.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`ve`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[number, number]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Virtual end point. Default position has the offset by `}{`[0.01,0.01]`}{` from the end data point.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tension`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Tension value, range is `}<inlineCode parentName=\"td\">{`[0,1]`}</inlineCode>{`. Default is `}<inlineCode parentName=\"td\">{`0.1`}</inlineCode>{`.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"playground-3\"\n    }}>{`Playground`}</h3>\n    <Playground __position={3} __code={'() => {\\n  // import { CardinalSpline } from \\'@anntopia/geometry\\'\\n  const dataPoints = [50, 250, 200, 150, 100, 50, 250, 70, 400, 50, 450, 250]\\n  const spline = new CardinalSpline(dataPoints)\\n  spline.setConfig({ tension: 0.2 })\\n  const points = spline.getInterpolation()\\n  return <Canvas points={dataPoints} lines={[points]} />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CubicSpline,\n      CubicParameterSpline,\n      BoundaryCondition,\n      createQuasiUniformKnots,\n      createNonUniformKnots,\n      HermiteSpline,\n      CardinalSpline,\n      BezierSpline,\n      BSpline,\n      NURBS,\n      Canvas,\n      uniform,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        // import { CardinalSpline } from '@anntopia/geometry'\n        const dataPoints = [50, 250, 200, 150, 100, 50, 250, 70, 400, 50, 450, 250];\n        const spline = new CardinalSpline(dataPoints);\n        spline.setConfig({\n          tension: 0.2\n        });\n        const points = spline.getInterpolation();\n        return <Canvas points={dataPoints} lines={[points]} mdxType=\"Canvas\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"bezier-spline\"\n    }}>{`Bezier Spline`}</h2>\n    <h3 {...{\n      \"id\": \"config-4\"\n    }}>{`Config`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tension`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Tension value, range is `}<inlineCode parentName=\"td\">{`[0,1]`}</inlineCode>{`. Default is `}<inlineCode parentName=\"td\">{`0.5`}</inlineCode>{`.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`closed`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Closed curve. Default is `}<inlineCode parentName=\"td\">{`false`}</inlineCode>{`.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"playground-4\"\n    }}>{`Playground`}</h3>\n    <Playground __position={4} __code={'() => {\\n  // import { BezierSpline } from \\'@anntopia/geometry\\'\\n  const dataPoints = [50, 250, 200, 150, 100, 50, 250, 70, 400, 50, 450, 250]\\n  const spline = new BezierSpline(dataPoints)\\n  spline.setConfig({ tension: 0.7, closed: true })\\n  spline.setStep(0.001)\\n  const points = spline.getInterpolation()\\n  return <Canvas points={dataPoints} lines={[points]} />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CubicSpline,\n      CubicParameterSpline,\n      BoundaryCondition,\n      createQuasiUniformKnots,\n      createNonUniformKnots,\n      HermiteSpline,\n      CardinalSpline,\n      BezierSpline,\n      BSpline,\n      NURBS,\n      Canvas,\n      uniform,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        // import { BezierSpline } from '@anntopia/geometry'\n        const dataPoints = [50, 250, 200, 150, 100, 50, 250, 70, 400, 50, 450, 250];\n        const spline = new BezierSpline(dataPoints);\n        spline.setConfig({\n          tension: 0.7,\n          closed: true\n        });\n        spline.setStep(0.001);\n        const points = spline.getInterpolation();\n        return <Canvas points={dataPoints} lines={[points]} mdxType=\"Canvas\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"b-spline\"\n    }}>{`B Spline`}</h2>\n    <h3 {...{\n      \"id\": \"config-5\"\n    }}>{`Config`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`k`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Degree of spline. Default is `}<inlineCode parentName=\"td\">{`3`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`knots`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Knot vectors. length = n + k + 1. Default is `}<inlineCode parentName=\"td\">{`an array of quasiUniform knots`}</inlineCode>{`.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"method\"\n    }}>{`Method`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`insertKnot(t)`}</strong></p>\n        <p parentName=\"li\">{`Insert knot and add new data point automatically.`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><strong parentName=\"p\">{`t`}</strong>{` `}<em parentName=\"p\">{`number`}</em></p>\n            <p parentName=\"li\">{`knot value, range is `}<inlineCode parentName=\"p\">{`(0,1)`}</inlineCode></p>\n          </li>\n        </ul>\n      </li>\n    </ul>\n    <h3 {...{\n      \"id\": \"playground-5\"\n    }}>{`Playground`}</h3>\n    <Playground __position={5} __code={'() => {\\n  // import { BSpline, createQuasiUniformKnots } from \\'@anntopia/geometry\\'\\n  const dataPoints = [50, 250, 200, 150, 100, 50, 250, 70, 400, 50, 450, 250]\\n  const spline = new BSpline(dataPoints)\\n  spline.setStep(0.001)\\n  spline.setConfig({\\n    k: 4,\\n    knots: createQuasiUniformKnots({ points: dataPoints, k: 4 }),\\n  })\\n  const points = spline.getInterpolation()\\n  return <Canvas points={dataPoints} lines={[points]} />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CubicSpline,\n      CubicParameterSpline,\n      BoundaryCondition,\n      createQuasiUniformKnots,\n      createNonUniformKnots,\n      HermiteSpline,\n      CardinalSpline,\n      BezierSpline,\n      BSpline,\n      NURBS,\n      Canvas,\n      uniform,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        // import { BSpline, createQuasiUniformKnots } from '@anntopia/geometry'\n        const dataPoints = [50, 250, 200, 150, 100, 50, 250, 70, 400, 50, 450, 250];\n        const spline = new BSpline(dataPoints);\n        spline.setStep(0.001);\n        spline.setConfig({\n          k: 4,\n          knots: createQuasiUniformKnots({\n            points: dataPoints,\n            k: 4\n          })\n        });\n        const points = spline.getInterpolation();\n        return <Canvas points={dataPoints} lines={[points]} mdxType=\"Canvas\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"nurbs\"\n    }}>{`NURBS`}</h2>\n    <h3 {...{\n      \"id\": \"config-6\"\n    }}>{`Config`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`k`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Same as the Config in `}<a parentName=\"td\" {...{\n              \"href\": \"#b-spline\"\n            }}>{`BSpine`}</a></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`knots`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Same as the Config in `}<a parentName=\"td\" {...{\n              \"href\": \"#b-spline\"\n            }}>{`BSpine`}</a></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`w`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number[]`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Weight values. The length is the same as data points. Default is `}<inlineCode parentName=\"td\">{`all 1 element array`}</inlineCode>{`.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"method-1\"\n    }}>{`Method`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`insertKnot(t)`}</strong></p>\n        <p parentName=\"li\">{`Insert knot and add new data point and weight automatically.`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\"><strong parentName=\"p\">{`t`}</strong>{` `}<em parentName=\"p\">{`number`}</em></p>\n            <p parentName=\"li\">{`knot value, range is `}<inlineCode parentName=\"p\">{`(0,1)`}</inlineCode></p>\n          </li>\n        </ul>\n      </li>\n    </ul>\n    <h3 {...{\n      \"id\": \"playground-6\"\n    }}>{`Playground`}</h3>\n    <Playground __position={6} __code={'() => {\\n  // import { NURBS, createNonUniformKnots } from \\'@anntopia/geometry\\'\\n  const dataPoints = [50, 250, 200, 150, 100, 50, 250, 70, 400, 50, 450, 250]\\n  const spline = new NURBS(dataPoints)\\n  spline.setStep(0.001)\\n  spline.setConfig({\\n    k: 4,\\n    knots: createNonUniformKnots({ points: dataPoints, k: 4 }),\\n  })\\n  spline.insertKnot(0.35)\\n  const points = spline.getInterpolation()\\n  return <Canvas points={dataPoints} lines={[points]} />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      CubicSpline,\n      CubicParameterSpline,\n      BoundaryCondition,\n      createQuasiUniformKnots,\n      createNonUniformKnots,\n      HermiteSpline,\n      CardinalSpline,\n      BezierSpline,\n      BSpline,\n      NURBS,\n      Canvas,\n      uniform,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        // import { NURBS, createNonUniformKnots } from '@anntopia/geometry'\n        const dataPoints = [50, 250, 200, 150, 100, 50, 250, 70, 400, 50, 450, 250];\n        const spline = new NURBS(dataPoints);\n        spline.setStep(0.001);\n        spline.setConfig({\n          k: 4,\n          knots: createNonUniformKnots({\n            points: dataPoints,\n            k: 4\n          })\n        });\n        spline.insertKnot(0.35);\n        const points = spline.getInterpolation();\n        return <Canvas points={dataPoints} lines={[points]} mdxType=\"Canvas\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"knot-functions\"\n    }}>{`Knot Functions`}</h2>\n    <p>{`Helper functions for creating knots of b-spline`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`function name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`example`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Uniform`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`createUniformKnots(param)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[0, 0.2, 0.4, 0.6, 0.8, 1]`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`QuasiUniform`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`createQuasiUniformKnots(param)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[0, 0, 0, 1/3, 2/3, 1, 1, 1]`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`PiceceWise`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`createPiceceWiseKnots(param)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[0, 0, 0, 1/2, 1/2, 1, 1, 1]`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`NonUniform`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`createNonUniformKnots(param)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`[0, 0, 0, 0.34, 0.35, 0.66, 1, 1, 1]`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p><strong parentName=\"p\">{`param`}</strong>{` `}<inlineCode parentName=\"p\">{`Object`}</inlineCode></p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`points`}</strong>{` - `}<inlineCode parentName=\"p\">{`number[]`}</inlineCode></p>\n        <p parentName=\"li\">{`Data points array`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`k`}</strong>{` - `}<inlineCode parentName=\"p\">{`number`}</inlineCode></p>\n        <p parentName=\"li\">{`Degree of spline`}</p>\n      </li>\n    </ul>\n    <p><inlineCode parentName=\"p\">{`knots length = n(points number) + k(degree of spline) + 1`}</inlineCode></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}