(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{mw1H:function(t,n,e){"use strict";e.r(n),e.d(n,"_frontmatter",(function(){return u})),e.d(n,"default",(function(){return O}));var a=e("IKa1"),i=e("1lK0"),o=e("ITlK"),s=e("r0ML"),r=e("V0Ug"),c=e("sN0p"),p=e("EeHy"),b=e("NIMi"),d=e("S48i"),l=e("cbvu"),u=(e("xH0s"),{});void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/geometry/distance.mdx"}});var m={_frontmatter:u},f=c.a;function O(t){var n,e,O=t.components,j=Object(o.a)(t,["components"]);return Object(r.b)(f,Object(a.a)({},m,j,{components:O,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"overview"},"Overview"),Object(r.b)("p",null,"Todo"),Object(r.b)("h2",{id:"closestpair"},"ClosestPair"),Object(r.b)(p.c,{__position:0,__code:"() => {\n  // import { ClosestPair } from '@anntopia/geometry'\n  const points = uniform(10)\n  const { distance, begin, end } = ClosestPair(points)\n  const pairPoints = [...begin, ...end]\n  return (\n    <>\n      <Canvas points={points} lines={[pairPoints]} />\n      <div>Closest pair points distance: {distance} </div>\n    </>\n  )\n}",__scope:(n={props:j,DefaultLayout:c.a,Playground:p.c,Props:p.d,ClosestPair:b.h,FarthestPair:b.l,Canvas:d.a,uniform:l.a},n.DefaultLayout=c.a,n._frontmatter=u,n),mdxType:"Playground"},(function(){var t=Object(l.a)(10),n=Object(b.h)(t),e=n.distance,a=n.begin,o=n.end,c=[].concat(Object(i.a)(a),Object(i.a)(o));return Object(r.b)(s.Fragment,null,Object(r.b)(d.a,{points:t,lines:[c],mdxType:"Canvas"}),Object(r.b)("div",null,"Closest pair points distance: ",e," "))})),Object(r.b)("h2",{id:"farthestpair"},"FarthestPair"),Object(r.b)(p.c,{__position:1,__code:"() => {\n  // // import { FarthestPair } from '@anntopia/geometry'\n  const points = uniform(10)\n  const { distance, begin, end } = FarthestPair(points)\n  const pairPoints = [...begin, ...end]\n  return (\n    <>\n      <Canvas points={points} lines={[pairPoints]} />\n      <div>Farthest pair points distance: {distance} </div>\n    </>\n  )\n}",__scope:(e={props:j,DefaultLayout:c.a,Playground:p.c,Props:p.d,ClosestPair:b.h,FarthestPair:b.l,Canvas:d.a,uniform:l.a},e.DefaultLayout=c.a,e._frontmatter=u,e),mdxType:"Playground"},(function(){var t=Object(l.a)(10),n=Object(b.l)(t),e=n.distance,a=n.begin,o=n.end,c=[].concat(Object(i.a)(a),Object(i.a)(o));return Object(r.b)(s.Fragment,null,Object(r.b)(d.a,{points:t,lines:[c],mdxType:"Canvas"}),Object(r.b)("div",null,"Farthest pair points distance: ",e," "))})))}void 0!==O&&O&&O===Object(O)&&Object.isExtensible(O)&&!O.hasOwnProperty("__filemeta")&&Object.defineProperty(O,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/geometry/distance.mdx"}}),O.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-geometry-distance-mdx-e33def345aa596988f8e.js.map