{"version":3,"sources":["webpack:///../src/geometry/bounding-box.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Props","AABB","MinAreaBox","MinPerimeterBox","Canvas","uniform","points","rect","minx","miny","maxx","maxy","vertices","lines","v0x","v0y","push","isMDXComponent"],"mappings":"uSAYaA,G,UAAe,S,+MAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,UAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,YADR,YAGA,6BACA,kBACE,GAAM,0BADR,0BAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,gWAAmWC,SAAO,GAC3YJ,QACAH,kBACAQ,eACAC,UACAC,SACAC,eACAC,oBACAC,WACAC,aAT2Y,gBAU3Yd,IAV2Y,EAW3YH,eAX2Y,GAY1YO,QAAQ,eACZ,WAEK,IAAMW,EAASD,YAAQ,IACjBE,EAAON,YAAKK,GACXE,EAA0BD,EAJhC,GAIYE,EAAoBF,EAJhC,GAIkBG,EAAcH,EAJhC,GAIwBI,EAAQJ,EAJhC,GAKKK,EAAW,CAACJ,EAAMC,EAAMC,EAAMD,EAAMC,EAAMC,EAAMH,EAAMG,EAAMH,EAAMC,GACxE,OAAO,YAAC,IAAD,CAAQH,OAAQA,EAAQO,MAAOD,EAAUjB,QAAQ,cAG5D,kBACE,GAAM,cADR,cAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,8PAAiQC,SAAO,GACzSJ,QACAH,kBACAQ,eACAC,UACAC,SACAC,eACAC,oBACAC,WACAC,aATyS,gBAUzSd,IAVyS,EAWzSH,eAXyS,GAYxSO,QAAQ,eACZ,WAEK,IAAMW,EAASD,YAAQ,GAAI,GAAI,IACzBE,EAAOL,YAAWI,GAHvB,EAIkB,CAACC,EAAK,GAAIA,EAAK,IAA3BO,EAJN,KAIWC,EAJX,KAMD,OADAR,EAAKS,KAAKF,EAAKC,GACR,YAAC,IAAD,CAAQT,OAAQA,EAAQO,MAAON,EAAMZ,QAAQ,cAGxD,kBACE,GAAM,mBADR,mBAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,wQAA2QC,SAAO,GACnTJ,QACAH,kBACAQ,eACAC,UACAC,SACAC,eACAC,oBACAC,WACAC,aATmT,gBAUnTd,IAVmT,EAWnTH,eAXmT,GAYlTO,QAAQ,eACZ,WAEK,IAAMW,EAASD,YAAQ,GAAI,GAAI,IACzBE,EAAOJ,YAAgBG,GAH5B,EAIkB,CAACC,EAAK,GAAIA,EAAK,IAA3BO,EAJN,KAIWC,EAJX,KAMD,OADAR,EAAKS,KAAKF,EAAKC,GACR,YAAC,IAAD,CAAQT,OAAQA,EAAQO,MAAON,EAAMZ,QAAQ,oB,6MAO5DH,EAAWyB,gBAAiB","file":"component---src-geometry-bounding-box-mdx-786150bc11ebe3de1acf.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/didi/Desktop/project/anntopia/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { AABB, MinAreaBox, MinPerimeterBox } from '@anntopia/geometry';\nimport Canvas from '../components/Canvas';\nimport { uniform } from '../utils/randomPoints';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`Todo`}</p>\n    <h2 {...{\n      \"id\": \"axisalignedboundingbox\"\n    }}>{`AxisAlignedBoundingBox`}</h2>\n    <Playground __position={0} __code={'() => {\\n  // import { AABB } from \\'@anntopia/geometry\\'\\n  const points = uniform(10)\\n  const rect = AABB(points)\\n  const [minx, miny, maxx, maxy] = rect\\n  const vertices = [\\n    minx,\\n    miny,\\n    maxx,\\n    miny,\\n    maxx,\\n    maxy,\\n    minx,\\n    maxy,\\n    minx,\\n    miny,\\n  ]\\n  return <Canvas points={points} lines={vertices} />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      AABB,\n      MinAreaBox,\n      MinPerimeterBox,\n      Canvas,\n      uniform,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        // import { AABB } from '@anntopia/geometry'\n        const points = uniform(10);\n        const rect = AABB(points);\n        const [minx, miny, maxx, maxy] = rect;\n        const vertices = [minx, miny, maxx, miny, maxx, maxy, minx, maxy, minx, miny];\n        return <Canvas points={points} lines={vertices} mdxType=\"Canvas\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"minareabox\"\n    }}>{`MinAreaBox`}</h2>\n    <Playground __position={1} __code={'() => {\\n  // import { MinAreaBox } from \\'@anntopia/geometry\\'\\n  const points = uniform(10, 30, 30)\\n  const rect = MinAreaBox(points)\\n  const [v0x, v0y] = [rect[0], rect[1]]\\n  rect.push(v0x, v0y)\\n  return <Canvas points={points} lines={rect} />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      AABB,\n      MinAreaBox,\n      MinPerimeterBox,\n      Canvas,\n      uniform,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        // import { MinAreaBox } from '@anntopia/geometry'\n        const points = uniform(10, 30, 30);\n        const rect = MinAreaBox(points);\n        const [v0x, v0y] = [rect[0], rect[1]];\n        rect.push(v0x, v0y);\n        return <Canvas points={points} lines={rect} mdxType=\"Canvas\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"minperimeterbox\"\n    }}>{`MinPerimeterBox`}</h2>\n    <Playground __position={2} __code={'() => {\\n  // import { MinPerimeterBox } from \\'@anntopia/geometry\\'\\n  const points = uniform(10, 30, 30)\\n  const rect = MinPerimeterBox(points)\\n  const [v0x, v0y] = [rect[0], rect[1]]\\n  rect.push(v0x, v0y)\\n  return <Canvas points={points} lines={rect} />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      AABB,\n      MinAreaBox,\n      MinPerimeterBox,\n      Canvas,\n      uniform,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        // import { MinPerimeterBox } from '@anntopia/geometry'\n        const points = uniform(10, 30, 30);\n        const rect = MinPerimeterBox(points);\n        const [v0x, v0y] = [rect[0], rect[1]];\n        rect.push(v0x, v0y);\n        return <Canvas points={points} lines={rect} mdxType=\"Canvas\" />;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}