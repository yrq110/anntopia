(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{nspU:function(n,e,t){"use strict";t.r(e),t.d(e,"_frontmatter",(function(){return p})),t.d(e,"default",(function(){return d}));var o=t("IKa1"),r=t("ITlK"),i=(t("r0ML"),t("V0Ug")),a=t("sN0p"),s=t("EeHy"),c=t("vLsX"),m=t("S48i"),b=t("bt9X"),p=(t("xH0s"),{});void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/geometry/bounding-box.mdx"}});var x={_frontmatter:p},u=a.a;function d(n){var e,t,d,y=n.components,l=Object(r.a)(n,["components"]);return Object(i.b)(u,Object(o.a)({},x,l,{components:y,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"overview"},"Overview"),Object(i.b)("p",null,"Todo"),Object(i.b)("h2",{id:"axisalignedboundingbox"},"AxisAlignedBoundingBox"),Object(i.b)(s.c,{__position:0,__code:"() => {\n  const points = random(40, 100, 350, 250, 50, 50)\n  const rect = AABB(points)\n  const [minx, miny, maxx, maxy] = rect\n  const vertices = [\n    minx,\n    miny,\n    maxx,\n    miny,\n    maxx,\n    maxy,\n    minx,\n    maxy,\n    minx,\n    miny,\n  ]\n  return <Canvas points={points} lines={vertices} />\n}",__scope:(e={props:l,DefaultLayout:a.a,Playground:s.c,Props:s.d,AABB:c.AABB,MinAreaBox:c.MinAreaBox,MinPerimeterBox:c.MinPerimeterBox,Canvas:m.a,random:b.b},e.DefaultLayout=a.a,e._frontmatter=p,e),mdxType:"Playground"},(function(){var n=Object(b.b)(40,100,350,250,50,50),e=Object(c.AABB)(n),t=e[0],o=e[1],r=e[2],a=e[3],s=[t,o,r,o,r,a,t,a,t,o];return Object(i.b)(m.a,{points:n,lines:s,mdxType:"Canvas"})})),Object(i.b)("h2",{id:"minareabox"},"MinAreaBox"),Object(i.b)(s.c,{__position:1,__code:"() => {\n  const points = random(10, 20, 350, 250, 50, 50)\n  const rect = MinAreaBox(points)\n  const [v0x, v0y] = [rect[0], rect[1]]\n  rect.push(v0x, v0y)\n  return <Canvas points={points} lines={rect} />\n}",__scope:(t={props:l,DefaultLayout:a.a,Playground:s.c,Props:s.d,AABB:c.AABB,MinAreaBox:c.MinAreaBox,MinPerimeterBox:c.MinPerimeterBox,Canvas:m.a,random:b.b},t.DefaultLayout=a.a,t._frontmatter=p,t),mdxType:"Playground"},(function(){var n=Object(b.b)(10,20,350,250,50,50),e=Object(c.MinAreaBox)(n),t=[e[0],e[1]],o=t[0],r=t[1];return e.push(o,r),Object(i.b)(m.a,{points:n,lines:e,mdxType:"Canvas"})})),Object(i.b)("h2",{id:"minperimeterbox"},"MinPerimeterBox"),Object(i.b)(s.c,{__position:2,__code:"() => {\n  const points = random(10, 20, 350, 250, 50, 50)\n  const rect = MinPerimeterBox(points)\n  const [v0x, v0y] = [rect[0], rect[1]]\n  rect.push(v0x, v0y)\n  return <Canvas points={points} lines={rect} />\n}",__scope:(d={props:l,DefaultLayout:a.a,Playground:s.c,Props:s.d,AABB:c.AABB,MinAreaBox:c.MinAreaBox,MinPerimeterBox:c.MinPerimeterBox,Canvas:m.a,random:b.b},d.DefaultLayout=a.a,d._frontmatter=p,d),mdxType:"Playground"},(function(){var n=Object(b.b)(10,20,350,250,50,50),e=Object(c.MinPerimeterBox)(n),t=[e[0],e[1]],o=t[0],r=t[1];return e.push(o,r),Object(i.b)(m.a,{points:n,lines:e,mdxType:"Canvas"})})))}void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/geometry/bounding-box.mdx"}}),d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-geometry-bounding-box-mdx-ba61f520e16b4fa7adbf.js.map