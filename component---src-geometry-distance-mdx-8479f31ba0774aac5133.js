(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{mw1H:function(t,e,n){"use strict";n.r(e),n.d(e,"_frontmatter",(function(){return u})),n.d(e,"default",(function(){return j}));var a=n("IKa1"),i=n("1lK0"),s=n("ITlK"),o=n("r0ML"),r=n("V0Ug"),c=n("sN0p"),b=n("EeHy"),d=n("vLsX"),p=n("S48i"),l=n("bt9X"),u=(n("xH0s"),{});void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!u.hasOwnProperty("__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/geometry/distance.mdx"}});var m={_frontmatter:u},O=c.a;function j(t){var e,n,j=t.components,P=Object(s.a)(t,["components"]);return Object(r.b)(O,Object(a.a)({},m,P,{components:j,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"overview"},"Overview"),Object(r.b)("p",null,"Todo"),Object(r.b)("h2",{id:"closestpair"},"ClosestPair"),Object(r.b)(b.c,{__position:0,__code:"() => {\n  const points = random(10, 20, 350, 250, 50, 50)\n  const { distance, begin, end } = ClosestPair(points)\n  const pairPoints = [...begin, ...end]\n  return (\n    <>\n      <Canvas points={points} lines={pairPoints} />\n      <div>Closest pair points distance: {distance} </div>\n    </>\n  )\n}",__scope:(e={props:P,DefaultLayout:c.a,Playground:b.c,Props:b.d,ClosestPair:d.ClosestPair,FarthestPair:d.FarthestPair,Canvas:p.a,random:l.b},e.DefaultLayout=c.a,e._frontmatter=u,e),mdxType:"Playground"},(function(){var t=Object(l.b)(10,20,350,250,50,50),e=Object(d.ClosestPair)(t),n=e.distance,a=e.begin,s=e.end,c=[].concat(Object(i.a)(a),Object(i.a)(s));return Object(r.b)(o.Fragment,null,Object(r.b)(p.a,{points:t,lines:c,mdxType:"Canvas"}),Object(r.b)("div",null,"Closest pair points distance: ",n," "))})),Object(r.b)("h2",{id:"farthestpair"},"FarthestPair"),Object(r.b)(b.c,{__position:1,__code:"() => {\n  const points = random(10, 20, 350, 250, 50, 50)\n  const { distance, begin, end } = FarthestPair(points)\n  const pairPoints = [...begin, ...end]\n  return (\n    <>\n      <Canvas points={points} lines={pairPoints} />\n      <div>Farthest pair points distance: {distance} </div>\n    </>\n  )\n}",__scope:(n={props:P,DefaultLayout:c.a,Playground:b.c,Props:b.d,ClosestPair:d.ClosestPair,FarthestPair:d.FarthestPair,Canvas:p.a,random:l.b},n.DefaultLayout=c.a,n._frontmatter=u,n),mdxType:"Playground"},(function(){var t=Object(l.b)(10,20,350,250,50,50),e=Object(d.FarthestPair)(t),n=e.distance,a=e.begin,s=e.end,c=[].concat(Object(i.a)(a),Object(i.a)(s));return Object(r.b)(o.Fragment,null,Object(r.b)(p.a,{points:t,lines:c,mdxType:"Canvas"}),Object(r.b)("div",null,"Farthest pair points distance: ",n," "))})))}void 0!==j&&j&&j===Object(j)&&Object.isExtensible(j)&&!j.hasOwnProperty("__filemeta")&&Object.defineProperty(j,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/geometry/distance.mdx"}}),j.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-geometry-distance-mdx-8479f31ba0774aac5133.js.map