(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{j1JZ:function(n,a,t){"use strict";t.r(a),t.d(a,"_frontmatter",(function(){return c})),t.d(a,"default",(function(){return b}));var o=t("IKa1"),i=t("ITlK"),e=(t("eTVF"),t("r0ML"),t("V0Ug")),r=t("sN0p"),l=t("EeHy"),u=t("vLsX"),g=t("S48i"),s=t("bt9X"),c=(t("xH0s"),{});void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/geometry/triangulation.mdx"}});var p={_frontmatter:c},y=r.a;function b(n){var a,t,b,d=n.components,T=Object(i.a)(n,["components"]);return Object(e.b)(y,Object(o.a)({},p,T,{components:d,mdxType:"MDXLayout"}),Object(e.b)("h2",{id:"overview"},"Overview"),Object(e.b)("p",null,"Todo"),Object(e.b)("h2",{id:"delaunaytriangulation"},"DelaunayTriangulation"),Object(e.b)(l.c,{__position:0,__code:"() => {\n  const points = random(40, 100, 350, 250, 50, 50)\n  const triangles = DelaunayTriangulation(points)\n  const vertices = []\n  triangles.forEach(triangle => {\n    vertices.push(triangle.flat())\n  })\n  return <Canvas points={points} polygons={vertices} />\n}",__scope:(a={props:T,DefaultLayout:r.a,Playground:l.c,Props:l.d,Chan:u.Chan,DelaunayTriangulation:u.DelaunayTriangulation,PolygonTriangulation:u.PolygonTriangulation,MinWeightTriangulation:u.MinWeightTriangulation,Canvas:g.a,random:s.b},a.DefaultLayout=r.a,a._frontmatter=c,a),mdxType:"Playground"},(function(){var n=Object(s.b)(40,100,350,250,50,50),a=Object(u.DelaunayTriangulation)(n),t=[];return a.forEach((function(n){t.push(n.flat())})),Object(e.b)(g.a,{points:n,polygons:t,mdxType:"Canvas"})})),Object(e.b)("h2",{id:"polygontriangulation"},"PolygonTriangulation"),Object(e.b)(l.c,{__position:1,__code:"() => {\n  const points = random(40, 100, 350, 250, 50, 50)\n  const polygon = Chan(points)\n  const triangles = PolygonTriangulation(polygon)\n  return <Canvas points={polygon} polygons={triangles} />\n}",__scope:(t={props:T,DefaultLayout:r.a,Playground:l.c,Props:l.d,Chan:u.Chan,DelaunayTriangulation:u.DelaunayTriangulation,PolygonTriangulation:u.PolygonTriangulation,MinWeightTriangulation:u.MinWeightTriangulation,Canvas:g.a,random:s.b},t.DefaultLayout=r.a,t._frontmatter=c,t),mdxType:"Playground"},(function(){var n=Object(s.b)(40,100,350,250,50,50),a=Object(u.Chan)(n),t=Object(u.PolygonTriangulation)(a);return Object(e.b)(g.a,{points:a,polygons:t,mdxType:"Canvas"})})),Object(e.b)("h2",{id:"minweighttriangulation"},"MinWeightTriangulation"),Object(e.b)(l.c,{__position:2,__code:"() => {\n  const points = random(40, 100, 350, 250, 50, 50)\n  const polygon = Chan(points)\n  const triangles = MinWeightTriangulation(polygon)\n  return <Canvas points={polygon} polygons={triangles} />\n}",__scope:(b={props:T,DefaultLayout:r.a,Playground:l.c,Props:l.d,Chan:u.Chan,DelaunayTriangulation:u.DelaunayTriangulation,PolygonTriangulation:u.PolygonTriangulation,MinWeightTriangulation:u.MinWeightTriangulation,Canvas:g.a,random:s.b},b.DefaultLayout=r.a,b._frontmatter=c,b),mdxType:"Playground"},(function(){var n=Object(s.b)(40,100,350,250,50,50),a=Object(u.Chan)(n),t=Object(u.MinWeightTriangulation)(a);return Object(e.b)(g.a,{points:a,polygons:t,mdxType:"Canvas"})})))}void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/geometry/triangulation.mdx"}}),b.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-geometry-triangulation-mdx-36c6e06d773d97fae9a1.js.map