import{r as o,o as p,c as l,b as n,a as t,w as e,F as c,g as s,h as i}from"./app.e84b2b0f.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const u={},k=n("h1",{id:"overview",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#overview","aria-hidden":"true"},"#"),s(" Overview")],-1),m=n("p",null,"This package contains computing geometry algorithms and split into the following categories:",-1),d=n("strong",null,"Curve",-1),b=s(" - multiple types of interpolating spline"),h=n("strong",null,"Bounding Box",-1),g=s(" - the minimum or smallest bounding or enclosing box"),_=n("strong",null,"Convex Hull",-1),f=s(" - the smallest convex set that contains target points"),y=n("strong",null,"Triangulation",-1),v=s(" - determining the location of a point by forming triangles to the point from known points"),x=n("strong",null,"Boolean Operation",-1),w=s(" - a set of Boolean Operation on one or more sets of primitives"),B=n("strong",null,"Distance",-1),C=s(" - min/max distance or path among points"),P=n("strong",null,"Area",-1),N=s(" - get target area from point set or polygon"),S=i(`<h2 id="install" tabindex="-1"><a class="header-anchor" href="#install" aria-hidden="true">#</a> Install</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">yarn</span> <span class="token function">add</span> @anntopia/geometry
<span class="token comment"># or</span>
$ <span class="token function">npm</span> <span class="token function">install</span> @anntopia/geometry
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="use" tabindex="-1"><a class="header-anchor" href="#use" aria-hidden="true">#</a> Use</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Chan<span class="token punctuation">,</span> BezierSpline <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@anntopia/geometry&#39;</span>

<span class="token keyword">const</span> randomPoints <span class="token operator">=</span> <span class="token function">uniform</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span> <span class="token comment">// [x0, y0, x1, y1, ...]</span>
<span class="token keyword">const</span> polygon <span class="token operator">=</span> <span class="token function">Chan</span><span class="token punctuation">(</span>randomPoints<span class="token punctuation">)</span>

<span class="token keyword">const</span> dataPoints <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">450</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> spline <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BezierSpline</span><span class="token punctuation">(</span>dataPoints<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">tension</span><span class="token operator">:</span> <span class="token number">0.3</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0.01</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> splinePoints <span class="token operator">=</span> spline<span class="token punctuation">.</span><span class="token function">getInterpolation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
spline<span class="token punctuation">.</span><span class="token function">setConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">tension</span><span class="token operator">:</span> <span class="token number">0.7</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
spline<span class="token punctuation">.</span><span class="token function">setStep</span><span class="token punctuation">(</span><span class="token number">0.005</span><span class="token punctuation">)</span>
splinePoints <span class="token operator">=</span> spline<span class="token punctuation">.</span><span class="token function">getInterpolation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>`,4);function V(j,I){const a=o("RouterLink");return p(),l(c,null,[k,m,n("ul",null,[n("li",null,[t(a,{to:"/geometry/curve.html"},{default:e(()=>[d]),_:1}),b]),n("li",null,[t(a,{to:"/geometry/bounding-box.html"},{default:e(()=>[h]),_:1}),g]),n("li",null,[t(a,{to:"/geometry/convex-hull.html"},{default:e(()=>[_]),_:1}),f]),n("li",null,[t(a,{to:"/geometry/triangulation.html"},{default:e(()=>[y]),_:1}),v]),n("li",null,[t(a,{to:"/geometry/boolean-operation.html"},{default:e(()=>[x]),_:1}),w]),n("li",null,[t(a,{to:"/geometry/distance.html"},{default:e(()=>[B]),_:1}),C]),n("li",null,[t(a,{to:"/geometry/area.html"},{default:e(()=>[P]),_:1}),N])]),S],64)}var z=r(u,[["render",V]]);export{z as default};
