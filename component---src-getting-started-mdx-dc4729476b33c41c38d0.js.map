{"version":3,"sources":["webpack:///../src/getting-started.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wPAQaA,G,UAAe,S,yMAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,kBACE,GAAM,gBADR,gBAGA,uBAAK,oBAAMC,WAAW,MAClB,UAAa,kBADZ,4EAML,kBACE,GAAM,OADR,OAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eADZ,mjB,uMAqBTJ,EAAWK,gBAAiB","file":"component---src-getting-started-mdx-dc4729476b33c41c38d0.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/didi/Desktop/project/anntopia/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`$ yarn add @anntopia/geometry\n# or\n$ npm install @anntopia/geometry\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"use\"\n    }}>{`Use`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// type: esmodule\nimport { Chan, BezierSpline } from '@anntopia/geometry'\n// type: commonjs\n// const { Chan, BezierSpline } = require('@anntopia/geometry')\n\nconst randomPoints = uniform(40) // [x0, y0, x1, y1, ...]\nconst polygon = Chan(randomPoints)\n\nconst dataPoints = [50, 250, 200, 150, 100, 50, 250, 70, 400, 50, 450, 250]\nconst spline = new BezierSpline(dataPoints, { tension: 0.3 }, 0.01)\nlet splinePoints = spline.getInterpolation()\nspline.setConfig({ tension: 0.7 })\nspline.setStep(0.005)\nsplinePoints = spline.getInterpolation()\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}