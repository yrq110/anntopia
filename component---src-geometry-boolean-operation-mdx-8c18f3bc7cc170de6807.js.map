{"version":3,"sources":["webpack:///../src/geometry/boolean-operation.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Props","LinesIntersection","LineSegmentsIntersection","isPointInPolygon","isPolygonsIntersection","Canvas","lineA","lineB","intersect","lines","join","point","polygon","isInPolygon","points","polygons","polygonA","polygonB","isPolyonIntersection","isMDXComponent"],"mappings":"2RAWaA,G,UAAe,S,oNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,YAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,YADR,YAGA,6BACA,kBACE,GAAM,QADR,QAGA,kBACE,GAAM,sBADR,sBAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,kYAAuYC,SAAO,GAC/aJ,QACAH,kBACAQ,eACAC,UACAC,sBACAC,6BACAC,qBACAC,2BACAC,YAT+a,gBAU/ad,IAV+a,EAW/aH,eAX+a,GAY9aO,QAAQ,eACZ,WACK,IAAMW,EAAQ,CAAC,GAAI,GAAI,GAAI,KACrBC,EAAQ,CAAC,GAAI,IAAK,IAAK,IACvBC,EAAYP,YAAkB,CAACK,EAAM,GAAIA,EAAM,IAAK,CAACA,EAAM,GAAIA,EAAM,IAAK,CAACC,EAAM,GAAIA,EAAM,IAAK,CAACA,EAAM,GAAIA,EAAM,KACvH,OAAO,4BACP,YAAC,IAAD,CAAQE,MAAO,CAACH,EAAOC,GAAQZ,QAAQ,WACvC,qCAAiBa,EAAYA,EAAUE,KAAK,MAAQ,OAApD,SAIJ,kBACE,GAAM,8BADR,8BAGA,YAAC,IAAD,CAAYd,WAAY,EAAGC,OAAQ,yYAA8YC,SAAO,GACtbJ,QACAH,kBACAQ,eACAC,UACAC,sBACAC,6BACAC,qBACAC,2BACAC,YATsb,gBAUtbd,IAVsb,EAWtbH,eAXsb,GAYrbO,QAAQ,eACZ,WACK,IAAMW,EAAQ,CAAC,GAAI,GAAI,GAAI,KACrBC,EAAQ,CAAC,GAAI,IAAK,IAAK,IACvBC,EAAYN,YAAyB,CAACI,EAAM,GAAIA,EAAM,IAAK,CAACA,EAAM,GAAIA,EAAM,IAAK,CAACC,EAAM,GAAIA,EAAM,IAAK,CAACA,EAAM,GAAIA,EAAM,KAC9H,OAAO,4BACP,YAAC,IAAD,CAAQE,MAAO,CAACH,EAAOC,GAAQZ,QAAQ,WACvC,qCAAiBa,EAAYA,EAAUE,KAAK,MAAQ,OAApD,SAIJ,kBACE,GAAM,WADR,WAGA,kBACE,GAAM,uBADR,uBAGA,YAAC,IAAD,CAAYd,WAAY,EAAGC,OAAQ,gSAAiSC,SAAO,GACzUJ,QACAH,kBACAQ,eACAC,UACAC,sBACAC,6BACAC,qBACAC,2BACAC,YATyU,gBAUzUd,IAVyU,EAWzUH,eAXyU,GAYxUO,QAAQ,eACZ,WACK,IAAMgB,EAAQ,CAAC,IAAK,IACdC,EAAU,CAAC,IAAK,GAAI,GAAI,IAAK,IAAK,KAClCC,EAAcV,YAAiBQ,EAAOC,GAC5C,OAAO,4BACP,YAAC,IAAD,CAAQE,OAAQH,EAAOI,SAAU,CAACH,GAAUjB,QAAQ,WACpD,+CAA2BkB,EAA3B,SAIJ,kBACE,GAAM,4BADR,4BAGA,YAAC,IAAD,CAAYjB,WAAY,EAAGC,OAAQ,kVAAmVC,SAAO,GAC3XJ,QACAH,kBACAQ,eACAC,UACAC,sBACAC,6BACAC,qBACAC,2BACAC,YAT2X,gBAU3Xd,IAV2X,EAW3XH,eAX2X,GAY1XO,QAAQ,eACZ,WACK,IAAMqB,EAAW,CAAC,GAAI,GAAI,IAAK,GAAI,IAAK,KAClCC,EAAW,CAAC,IAAK,GAAI,GAAI,IAAK,IAAK,KACnCC,EAAuBd,YAAuBY,EAAUC,GAC9D,OAAO,4BACP,YAAC,IAAD,CAAQF,SAAU,CAACC,EAAUC,GAAWtB,QAAQ,WAChD,mDAA+BuB,EAA/B,e,kNAQR1B,EAAW2B,gBAAiB","file":"component---src-geometry-boolean-operation-mdx-8c18f3bc7cc170de6807.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/didi/Desktop/project/anntopia/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { LinesIntersection, LineSegmentsIntersection, isPointInPolygon, isPolygonsIntersection } from '@anntopia/geometry';\nimport Canvas from '../components/Canvas';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`Todo`}</p>\n    <h2 {...{\n      \"id\": \"line\"\n    }}>{`Line`}</h2>\n    <h3 {...{\n      \"id\": \"lines-intersection\"\n    }}>{`Lines Intersection`}</h3>\n    <Playground __position={0} __code={'() => {\\n  const lineA = [20, 50, 50, 120]\\n  const lineB = [30, 300, 120, 30]\\n  const intersect = LinesIntersection(\\n    [lineA[0], lineA[1]],\\n    [lineA[2], lineA[3]],\\n    [lineB[0], lineB[1]],\\n    [lineB[2], lineB[3]],\\n  )\\n  return (\\n    <>\\n      <Canvas lines={[lineA, lineB]} />\\n      <div>intersect: {intersect ? intersect.join(\\', \\') : \\'null\\'} </div>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      LinesIntersection,\n      LineSegmentsIntersection,\n      isPointInPolygon,\n      isPolygonsIntersection,\n      Canvas,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const lineA = [20, 50, 50, 120];\n        const lineB = [30, 300, 120, 30];\n        const intersect = LinesIntersection([lineA[0], lineA[1]], [lineA[2], lineA[3]], [lineB[0], lineB[1]], [lineB[2], lineB[3]]);\n        return <>\n        <Canvas lines={[lineA, lineB]} mdxType=\"Canvas\" />\n        <div>intersect: {intersect ? intersect.join(', ') : 'null'} </div>\n      </>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"line-segments-intersection\"\n    }}>{`Line Segments Intersection`}</h3>\n    <Playground __position={1} __code={'() => {\\n  const lineA = [20, 50, 50, 120]\\n  const lineB = [30, 300, 120, 30]\\n  const intersect = LineSegmentsIntersection(\\n    [lineA[0], lineA[1]],\\n    [lineA[2], lineA[3]],\\n    [lineB[0], lineB[1]],\\n    [lineB[2], lineB[3]],\\n  )\\n  return (\\n    <>\\n      <Canvas lines={[lineA, lineB]} />\\n      <div>intersect: {intersect ? intersect.join(\\', \\') : \\'null\\'} </div>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      LinesIntersection,\n      LineSegmentsIntersection,\n      isPointInPolygon,\n      isPolygonsIntersection,\n      Canvas,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const lineA = [20, 50, 50, 120];\n        const lineB = [30, 300, 120, 30];\n        const intersect = LineSegmentsIntersection([lineA[0], lineA[1]], [lineA[2], lineA[3]], [lineB[0], lineB[1]], [lineB[2], lineB[3]]);\n        return <>\n        <Canvas lines={[lineA, lineB]} mdxType=\"Canvas\" />\n        <div>intersect: {intersect ? intersect.join(', ') : 'null'} </div>\n      </>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"polygon\"\n    }}>{`Polygon`}</h2>\n    <h3 {...{\n      \"id\": \"is-point-in-polygon\"\n    }}>{`Is Point In Polygon`}</h3>\n    <Playground __position={2} __code={'() => {\\n  const point = [110, 90]\\n  const polygon = [100, 20, 30, 200, 180, 270]\\n  const isInPolygon = isPointInPolygon(point, polygon)\\n  return (\\n    <>\\n      <Canvas points={point} polygons={[polygon]} />\\n      <div>Point in polygon: {`${isInPolygon}`} </div>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      LinesIntersection,\n      LineSegmentsIntersection,\n      isPointInPolygon,\n      isPolygonsIntersection,\n      Canvas,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const point = [110, 90];\n        const polygon = [100, 20, 30, 200, 180, 270];\n        const isInPolygon = isPointInPolygon(point, polygon);\n        return <>\n        <Canvas points={point} polygons={[polygon]} mdxType=\"Canvas\" />\n        <div>Point in polygon: {`${isInPolygon}`} </div>\n      </>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"is-polygons-intersection\"\n    }}>{`Is Polygons Intersection`}</h3>\n    <Playground __position={3} __code={'() => {\\n  const polygonA = [50, 70, 200, 30, 100, 200]\\n  const polygonB = [100, 20, 30, 200, 180, 270]\\n  const isPolyonIntersection = isPolygonsIntersection(polygonA, polygonB)\\n  return (\\n    <>\\n      <Canvas polygons={[polygonA, polygonB]} />\\n      <div>Polygon intersection: {`${isPolyonIntersection}`} </div>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      LinesIntersection,\n      LineSegmentsIntersection,\n      isPointInPolygon,\n      isPolygonsIntersection,\n      Canvas,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const polygonA = [50, 70, 200, 30, 100, 200];\n        const polygonB = [100, 20, 30, 200, 180, 270];\n        const isPolyonIntersection = isPolygonsIntersection(polygonA, polygonB);\n        return <>\n        <Canvas polygons={[polygonA, polygonB]} mdxType=\"Canvas\" />\n        <div>Polygon intersection: {`${isPolyonIntersection}`} </div>\n      </>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}