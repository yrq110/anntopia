(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{j1JZ:function(n,t,e){"use strict";e.r(t),e.d(t,"_frontmatter",(function(){return p})),e.d(t,"default",(function(){return f}));var a=e("IKa1"),o=e("ITlK"),i=(e("eTVF"),e("r0ML"),e("V0Ug")),r=e("sN0p"),l=e("EeHy"),u=e("NIMi"),c=e("S48i"),s=e("cbvu"),p=(e("xH0s"),{});void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/geometry/triangulation.mdx"}});var g={_frontmatter:p},b=r.a;function f(n){var t,e,f=n.components,m=Object(o.a)(n,["components"]);return Object(i.b)(b,Object(a.a)({},g,m,{components:f,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"overview"},"Overview"),Object(i.b)("p",null,"Todo"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"All returned triangles' vertices are in anti-clockwise")),Object(i.b)("h2",{id:"delaunaytriangulation"},"DelaunayTriangulation"),Object(i.b)(l.c,{__position:0,__code:"() => {\n  // import { DelaunayTriangulation } from '@anntopia/geometry'\n  const points = uniform(40)\n  const triangles = DelaunayTriangulation(points)\n  const vertices = []\n  triangles.forEach(triangle => {\n    vertices.push(triangle.flat())\n  })\n  return <Canvas points={points} polygons={vertices} />\n}",__scope:(t={props:m,DefaultLayout:r.a,Playground:l.c,Props:l.d,Chan:u.f,DelaunayTriangulation:u.j,PolygonTriangulation:u.w,MinWeightTriangulation:u.t,Canvas:c.a,uniform:s.a},t.DefaultLayout=r.a,t._frontmatter=p,t),mdxType:"Playground"},(function(){var n=Object(s.a)(40),t=Object(u.j)(n),e=[];return t.forEach((function(n){e.push(n.flat())})),Object(i.b)(c.a,{points:n,polygons:e,mdxType:"Canvas"})})),Object(i.b)("h2",{id:"minweighttriangulation"},"MinWeightTriangulation"),Object(i.b)(l.c,{__position:1,__code:"() => {\n  // import { MinWeightTriangulation } from '@anntopia/geometry'\n  const points = uniform(40)\n  const polygon = Chan(points)\n  const triangles = MinWeightTriangulation(polygon)\n  return <Canvas points={polygon} polygons={triangles} />\n}",__scope:(e={props:m,DefaultLayout:r.a,Playground:l.c,Props:l.d,Chan:u.f,DelaunayTriangulation:u.j,PolygonTriangulation:u.w,MinWeightTriangulation:u.t,Canvas:c.a,uniform:s.a},e.DefaultLayout=r.a,e._frontmatter=p,e),mdxType:"Playground"},(function(){var n=Object(s.a)(40),t=Object(u.f)(n),e=Object(u.t)(t);return Object(i.b)(c.a,{points:t,polygons:e,mdxType:"Canvas"})})))}void 0!==f&&f&&f===Object(f)&&Object.isExtensible(f)&&!f.hasOwnProperty("__filemeta")&&Object.defineProperty(f,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/geometry/triangulation.mdx"}}),f.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-geometry-triangulation-mdx-38cfd86a34cc336493fb.js.map