{"version":3,"sources":["webpack:///../src/geometry/triangulation.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","Chan","DelaunayTriangulation","PolygonTriangulation","MinWeightTriangulation","Canvas","uniform","points","triangles","vertices","forEach","triangle","push","flat","polygons","polygon","isMDXComponent"],"mappings":"kTAYaA,G,UAAe,S,gNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,QAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,YADR,YAGA,6BACA,sBACE,kBAAIC,WAAW,MAAf,2DAEF,kBACE,GAAM,yBADR,yBAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,4TAA+TC,SAAO,GACvWL,QACAH,kBACAS,eACAC,UACAC,SACAC,0BACAC,yBACAC,2BACAC,WACAC,aAVuW,gBAWvWhB,IAXuW,EAYvWH,eAZuW,GAatWO,QAAQ,eACZ,WAEK,IAAMa,EAASD,YAAQ,IACjBE,EAAYN,YAAsBK,GAClCE,EAAW,GAIjB,OAHAD,EAAUE,SAAQ,SAAAC,GAChBF,EAASG,KAAKD,EAASE,WAElB,YAAC,IAAD,CAAQN,OAAQA,EAAQO,SAAUL,EAAUf,QAAQ,cAG/D,kBACE,GAAM,0BADR,0BAGA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,6PAAgQC,SAAO,GACxSL,QACAH,kBACAS,eACAC,UACAC,SACAC,0BACAC,yBACAC,2BACAC,WACAC,aAVwS,gBAWxShB,IAXwS,EAYxSH,eAZwS,GAavSO,QAAQ,eACZ,WAEK,IAAMa,EAASD,YAAQ,IACjBS,EAAUd,YAAKM,GACfC,EAAYJ,YAAuBW,GACzC,OAAO,YAAC,IAAD,CAAQR,OAAQQ,EAASD,SAAUN,EAAWd,QAAQ,oB,8MAOrEH,EAAWyB,gBAAiB","file":"component---src-geometry-triangulation-mdx-3dadb59f005f17bc273f.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/didi/Desktop/project/anntopia/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Chan, DelaunayTriangulation, PolygonTriangulation, MinWeightTriangulation } from '@anntopia/geometry';\nimport Canvas from '../components/Canvas';\nimport { uniform } from '../utils/randomPoints';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`Todo`}</p>\n    <ul>\n      <li parentName=\"ul\">{`All returned triangles' vertices are in anti-clockwise`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"delaunaytriangulation\"\n    }}>{`DelaunayTriangulation`}</h2>\n    <Playground __position={0} __code={'() => {\\n  // import { DelaunayTriangulation } from \\'@anntopia/geometry\\'\\n  const points = uniform(40)\\n  const triangles = DelaunayTriangulation(points)\\n  const vertices = []\\n  triangles.forEach(triangle => {\\n    vertices.push(triangle.flat())\\n  })\\n  return <Canvas points={points} polygons={vertices} />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Chan,\n      DelaunayTriangulation,\n      PolygonTriangulation,\n      MinWeightTriangulation,\n      Canvas,\n      uniform,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        // import { DelaunayTriangulation } from '@anntopia/geometry'\n        const points = uniform(40);\n        const triangles = DelaunayTriangulation(points);\n        const vertices = [];\n        triangles.forEach(triangle => {\n          vertices.push(triangle.flat());\n        });\n        return <Canvas points={points} polygons={vertices} mdxType=\"Canvas\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"minweighttriangulation\"\n    }}>{`MinWeightTriangulation`}</h2>\n    <Playground __position={1} __code={'() => {\\n  // import { MinWeightTriangulation } from \\'@anntopia/geometry\\'\\n  const points = uniform(40)\\n  const polygon = Chan(points)\\n  const triangles = MinWeightTriangulation(polygon)\\n  return <Canvas points={polygon} polygons={triangles} />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Chan,\n      DelaunayTriangulation,\n      PolygonTriangulation,\n      MinWeightTriangulation,\n      Canvas,\n      uniform,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        // import { MinWeightTriangulation } from '@anntopia/geometry'\n        const points = uniform(40);\n        const polygon = Chan(points);\n        const triangles = MinWeightTriangulation(polygon);\n        return <Canvas points={polygon} polygons={triangles} mdxType=\"Canvas\" />;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}